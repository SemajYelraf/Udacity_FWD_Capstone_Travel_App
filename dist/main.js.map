{"version":3,"sources":["webpack://Client/webpack/bootstrap","webpack://Client/./node_modules/node-fetch/browser.js","webpack://Client/./src/client/index.js","webpack://Client/./src/client/js/app.js"],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;;AAEb;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD,qCAAqC,eAAe;AACpD,qCAAqC,eAAe;AACpD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,mC;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AACA,WAAW,gBAAgB;AACiC;;AAE5D;;AAEA;AACA;AACA,QAAQ,6DAAa;AACrB;AACA;;;;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AACA;AACA,cAAc,mBAAO,CAAC,wDAAY;;AAElC;AACO;AACP;AACA;;AAEA;AACO;;AAEP;AACA;;AAEA;AACA;AACA,oFAAoF,YAAY;;AAEhG;AACA;;AAEA;AACA,sFAAsF,cAAc;AACpG,gFAAgF,QAAQ;;;AAGxF;AACA;AACA;AACA;;AAEA,+FAA+F,cAAuB,CAAC,6CAA6C,YAAY;;AAEhL;AACA,2FAA2F;AAC3F;AACA;AACA;AACA,0GAA0G;AAC1G;AACA,+CAA+C,iEAAiE,MAAM,GAAG;AACzH;;AAEA;AACA;;AAEA;;AAEA;;AAEA,kCAAkC,YAAY,uBAAuB,cAAc;;AAEnF;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,uFAAuF,2CAA2C,MAAM,GAAG;AAC3I;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC,kFAAkF,MAAM;AACxF;AACA;;;AAGA;AACA,uC;;AAEA;AACA;;AAEA;AACA,qEAAqE;AACrE;AACA,8EAA8E,oCAAoC;AAClH;AACA,qEAAqE;AACrE,kFAAkF,0CAA0C,MAAM;AAClI;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC;AACzC,mFAAmF,MAAM;AACzF,yC;AACA;;;AAGA;AACA;AACA;;AAEA,oHAAoH,wCAAwC,MAAM,GAAG;AACrK,0GAA0G,wCAAwC,MAAM,GAAG;;AAE3J;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,2EAA2E,MAAM;AACjF;AACA,C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/client/index.js\");\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","// import MAIN function from app javascript\n// import { function_name } from './path/to/JS/file'\nimport { getDestinationData, initSearchBtn } from './js/app'\n\n//import SCSS files\n\ndocument.onreadystatechange = () => {\n    if (document.readyState == 'interactive'){\n        initSearchBtn();\n    }\n}\n\nexport { getDestinationData } \n\n","// https://www.npmjs.com/package/node-fetch\n// a window.fetch compatible API on Node.js runtime\nconst fetch = require('node-fetch');\n\n// Function to addEventListener to SEARCH button\nexport function initSearchBtn(){\n    document.getElementById('search').addEventListener('click', getDestinationData);\n}\n\n/* Function called by event listener */\nexport function getDestinationData(){\n\n                            // !!!\n                            console.log('... app.js : getDestinationData()');\n\n                            let destination = document.getElementById('destination').value;\n                            //!!!\n                            console.log(`... getDestinationData() : destination = ${destination}`);\n\n                            let departureDate = document.getElementById('departureDate').value;\n                            let numDays = getDaysTilDeparture(departureDate);\n\n                            // !!!\n                            console.log(`... getDestinationData() : departureDate = ${departureDate}`);\n                            console.log(`... getDestinationData() : numDays = ${numDays}`);\n\n\n                            document.getElementById('city').innerHTML = \"\";\n                            document.getElementById('city_lat').innerHTML = \"\";\n                            document.getElementById('city_lng').innerHTML = \"\";\n                            document.getElementById('country').innerHTML = \"\";\n\n                            const geonamesURL = `http://api.geonames.org/searchJSON?username=${process.env.GEONAMES_ID}&lang=en&maxRows=1&style=short&name_equals=${destination}`\n\n                            getCityData(geonamesURL)\n                            .then((data) => postData('http://localhost:8081/destination', {latitude: data.geonames[0].lat\n                                                                                    , longitude: data.geonames[0].lng\n                                                                                    , city: data.geonames[0].name\n                                                                                    , country: data.geonames[0].countryCode\n                                                                                    , diffInDays: numDays}))\n                            .then(() => updateUI())\n                            .catch((error) => {console.error(`getDestinationData() chained promises :: error: ${error}`)});\n}\n\n// Get number of days until departure\nfunction getDaysTilDeparture(dateValue){\n\n    const currentDate = new Date();\n\n    let departureDate = new Date(dateValue) ;\n\n    console.log(`Current date = ${currentDate} ... departureDate = ${departureDate}`);\n\n    return Math.trunc((departureDate.getTime() - currentDate.getTime()) / (1000*60*60*24));\n}\n\n\n/* Function to GET Web API Data*/\nconst getCityData = async (url) => {\n                                    // !!!\n                                    console.log('... app.js : getCityData()');\n\n                                    const response = await fetch(url).catch( error => { console.log(`getCityData fetch() error: ${error}`)});\n                                    try{\n                                        const cityData = await response.json();\n                                        // !!!\n                                        console.log('app.js : getCityData() :: cityData = ' + JSON.stringify(cityData));\n\n                                        return cityData;\n                                    } catch(error) {\n                                        console.error(`Error in getCityData() : ${error}`);\n                                    }\n}\n\n\n/* Function to POST data */\nconst postData = async (url, data) => {  \n\n                                        // !!!\n                                        console.log('... app.js : postData() :: data = ' + JSON.stringify(data));\n\n                                        const response = await fetch(url,\n                                                                    { method: 'POST',\n                                                                    credentials: 'same-origin',\n                                                                    headers: {'Content-type':'application/json', },\n                                                                    body: JSON.stringify(data)\n                                                                    }).catch( \n                                                                        error => { console.log(`postData() fetch() error: ${error}`)}\n                                                                    );\n                                        try{\n                                            const newData = await response.json();\n\n                                            // !!!\n                                            console.log('... app.js : postData() :: newData = ' + JSON.stringify(newData));\n\n                                            return newData;\n                                        } catch(error){\n                                            console.error(`Error in postData() : ${error}`);\n                                        }                                   \n}\n\n\n/* Function to GET Project Data */\nconst updateUI = async () => {\n                                console.log('... app.js : updateUI()');\n\n                                //const request = await fetch('http://localhost:8081/destination').catch( error => { console.log(`updateUI fetch() error: ${error}`)});\n                                const request = await fetch('http://localhost:8081/all').catch( error => { console.log(`updateUI fetch() error: ${error}`)});\n\n                                try{\n                                    const data = await request.json();\n\n                                    // !!!\n                                    console.log('... app.js : updateUI() :: data = ' + JSON.stringify(data));\n\n                                    document.getElementById('city').innerHTML = data.city;\n                                    document.getElementById('city_lat').innerHTML = data.latitude;\n                                    document.getElementById('city_lng').innerHTML = data.longitude;\n                                    document.getElementById('country').innerHTML = data.country;\n                                    document.getElementById('daysTilDepart').innerHTML = data.diffInDays\n                                } catch(error) {\n                                    console.error(`Error in updateUI() : ${error}`);\n                                }\n}"],"sourceRoot":""}